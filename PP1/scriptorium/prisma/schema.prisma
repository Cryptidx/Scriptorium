// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model Template {
  id      Int   @id @default(autoincrement())
  blogId  Int
  value   Int   // Template value, as BlogTemplate allows multiple templates for a blog
  blog    Blog  @relation(fields: [blogId], references: [id])
}

model User{
  id Int @id @default(autoincrement())

  // one user can make many blogs 
  blogs Blog[]
  // one user can make many comments 
  comments Comment[]
}


model Blog{
  // things specific to blog 
  id Int @id @default(autoincrement())
  title String 
  tag String
  // a blog can have many templates
  templates Template[]

  // shared things 
  flagged Boolean @default(false)
  description String

  // one author to many blogs 
  authorId Int
  author User @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  comments Comment[]
  upvotes Int
  downvotes Int

}

model Comment{
  id Int @id @default(autoincrement())
  blogId Int
  flagged Boolean @default(false)
  description String

  // one author to many blogs 
  authorId Int
  author User @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  blog        Blog       @relation(fields: [blogId], references: [id])
  parentId    Int?       // For subcomments, nullable for top-level comments
  parent      Comment?   @relation("Subcomments", fields: [parentId], references: [id])
  subcomments Comment[]  @relation("Subcomments")

  upvotes Int
  downvotes Int
}


